# Home

## ofexport2

- Sorting
- Prune option, add expressions automatically
- Problem: -cn Home not showing me sub contexts
  偲敳畭慢汹⁢散慵獥⁩琠捯湴楮略猠瑯⁲散畲獥⁡湤⁥汩浩湡瑥猠獵戠捯湴數瑳੔桩猠楳⁰牯扡扬礠慮⁩獳略⁷楴栠景汤敲猠瑯漮ਊ䍯畬搠慢潲琠浡瑣桩湧⁡晴敲⁡渠楮捬畤攠桩琠ⴠ捯湳敱略湣敳㼊੆楬瑥物湧⁴慳歳⁯渠Ⅳ潭灬整敤⁷潵汤⁡扯牴⁯渠浡瑣栠慮搠楮捬畤攠獵戠捯浰汥瑥搠瑡獫献ਊ䥳⁴桥⁳瑲慴敧礠晬慷敤㼊੓潬畴楯渊ⵣ‭捥‧湡浥㴽≈潭攢⁼簠楮捬畤敤✊ੱ畡汩晩敲猺ਭ⁯湬礊ⴠ敶敲祴桩湧啮摥�
- More Integration tests - would be better to create tasks programatically
  - Extract key functionality into new OFExport class - test that
- Do I need all the integration tests now?
- Markdown template
- Whitespace usage - can  avoid long lines? eatspace option? (make templates more readable)
- use visit/recurse: http://freemarker.org/docs/ref_directive_visit.html (maybe)
  桴瑰㨯⽦牥敭慲步爮潲术摯捳⽲敦彤楲散瑩癥彶楳楴⹨瑭�
- Use spring
- Externalise configuration files to directory (not resource path)
  䡡癥⁤敦慵汴⁯爠湡浥搠捯湦楧畲慴楯渠晩汥猊啳攠獰物湧
- Templates - use FreeMarker
  桴瑰猺⼯睷眮杯潧汥⹣漮畫⽳敡牣栿焽橡癡⭴敭灬慴敳♩攽啔䘭㠦潥㵕呆ⴸ♨氽敮♣汩敮琽獡晡物⍳慦攽潦昦桬㵥渦焽橡癡⭴敭灬慴攫敮杩湥ਊ䙲敥浡牫敲
- Test example template
- TaskPaper heavy/lite formats (notes)
- How to specify templates on the command line
- Allow log level setting from the command line
- OPML
- Design integration test framework to test main()
- Add Markdown format
- Generate todo & change log as part of build
- Text output formats should skip roots
- delete main test (replaced by integration tests)
- Write integration tests to test options
  湯摥猠批⁮慭攊湯摥猠批⁥硰牥獳楯�
- Export model for testing - save included items, use SQLite descriptors to identify fields
- Tests failing because contexts not empty - No Context
- Don't delete root tasks, context walk is flat
- Test No Context
- Test Inbox
- Prune: use "taskCount>0"
- Sort attrib help
- inbox tasks
- Fix SQLITE date bug
- Better date function tests, and tidy up - use node expressions
- More command line tests - get a feel for usage
- Trying eliminating Excluded nodes after each expression
- filterTasksDown on included filter eliminates task we're matching on (main test)
- Regular expressions
- Look at OGNL
- exclude node if it's not included? opt to include all below included
- Sort out getX vs isX in SQLITE loader
- Issue should projects appear in contexts - or their root tasks? - check what happens
- Load notes
- Test traverser
- Test nodes - esp add(xxx), should unlink from old parents too
- Make -xa implicit
- Rethink filters
  䉡獥⁣污獳敳⁦潲⁶楳楴潲⽦楬瑥爠睩瑨⁥晦楣楥湴⁴慩汯牥搠浥瑨潤猬⁡癯楤楮朠畮湥捥獳慲礠汯潰楮朮ਊ摥獣物灴潲⁮敥摳⁴漠捯浥⁦牯洠癩獩瑯�
- Test knitting
- Test paths
- cmdlinf filter of functions - phases
- Natural order of tasks/items
- Group doesn't lend itself to filtering
  䍡渠䤠摯⁷楴桯畴⁩琠ⴠ潮汹⁨慶攠楴⁴漠獵灰潲琠杲潵灩湧⁢礠摡瑥Ⱐ慮潴桥爠睡礿
- Filters - add means of just providing a boolean fn
- Need to re-invent filtering concepts, tree walks etc from before. include/exclude etc.
- Mode: project/context
- Filters - how to filter the root
- Write tests of knitting
- Load dates into tasks/projects
- Use visitor for text format
- load a folder and subsidiary projects/folders/tasks
- Add multi level filters to adapters (done folders, finish for other types)
- Add 4 separate filter types to command line and apply
- Build accessor (eg getAvailable) from java
- Write more tests of OSE - enrich the dummy class
- Add slash separation of nodes
- where parsing too restrictive - what about _or? - RETHINK EXPRESSIONS?
- Is notation good enough as is? try examples (alternate main)
- Ressurect use of availability
- More sensible command line order processing
- Unit Tests
- Streaming JSON IO? & parallel execution?
- Wow it's slow - load whole tree from javascript?
  䙩汴敲⁡湤⁷慬欠楮⁴桥⁡摡灴敲猿
- Lose the cacheing?
- Make an executable program
- Implement visitor pattern
- Add sorting
- Add filter to inbox(...)
- Create README
  偲潪散琠湡浥㨠瀽湡浥੐牯橥捴⁥硰牥獳楯渺⁐㵥硰爊䍯湴數琠湡浥㨠挽湡浥੃潮瑥硴⁥硰牥獳楯渺⁃㵥硰爊呡獫⁥硰牥獳楯渺⁔㵥硰爊䥮扯砺⁩ੁ癡楬慢楬楴示⁡癡楬㴮⸮੆污杧敤㨠晬慧来搽⸮⸊䙯牭慴㨠晭琽塍䰬䩓低ⱓ業灬敔數瑌楳琊却牵捴畲攺⁳瑲畣琽批却慲琬批䍯浰汥瑥搬批偲潪散琬批䍯湴數�
- Parse command line
- Load filters from command line
- How to express filters to end use (command line)r?
- Filter by basic enum? all, remaining, available, completed
- How to filter (streams + javascript?)
- How to export (json/xml to ?)
- load inbox tasks
- What's in which packages, don't like format visitors all lumped together
- Add equals hash code to node
- How to pass filters to javascript
- Escaping strings in params/filters
- make getProject/getContext return list
- make all getters take filter
- Use intermediate file for output
- Enum in query: remaining, available, completed, all
- Process with streams api
- Create executable program
- Parse the dates
- Test mode, capture/replay what comes back from JavaScript
